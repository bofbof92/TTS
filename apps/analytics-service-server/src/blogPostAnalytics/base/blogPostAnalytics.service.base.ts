/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BlogPostAnalytics as PrismaBlogPostAnalytics,
} from "@prisma/client";

export class BlogPostAnalyticsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BlogPostAnalyticsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.blogPostAnalytics.count(args);
  }

  async blogPostAnalyticsItems(
    args: Prisma.BlogPostAnalyticsFindManyArgs
  ): Promise<PrismaBlogPostAnalytics[]> {
    return this.prisma.blogPostAnalytics.findMany(args);
  }
  async blogPostAnalytics(
    args: Prisma.BlogPostAnalyticsFindUniqueArgs
  ): Promise<PrismaBlogPostAnalytics | null> {
    return this.prisma.blogPostAnalytics.findUnique(args);
  }
  async createBlogPostAnalytics(
    args: Prisma.BlogPostAnalyticsCreateArgs
  ): Promise<PrismaBlogPostAnalytics> {
    return this.prisma.blogPostAnalytics.create(args);
  }
  async updateBlogPostAnalytics(
    args: Prisma.BlogPostAnalyticsUpdateArgs
  ): Promise<PrismaBlogPostAnalytics> {
    return this.prisma.blogPostAnalytics.update(args);
  }
  async deleteBlogPostAnalytics(
    args: Prisma.BlogPostAnalyticsDeleteArgs
  ): Promise<PrismaBlogPostAnalytics> {
    return this.prisma.blogPostAnalytics.delete(args);
  }
}
